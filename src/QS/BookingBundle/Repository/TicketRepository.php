<?php

namespace QS\BookingBundle\Repository;

use QS\BookingBundle\Entity\Event;

/**
 * TicketRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TicketRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAllByIds(array $tickets)
    {
        $ids = [];
        foreach ($tickets as $ticket) {
            $ids[] = $ticket->getId();
        }
        return $this->createQueryBuilder('t')
            ->andWhere('t.id IN (:ids)')
            ->setParameters([
                'ids' => $ids,
            ])
            ->getQuery()
            ->getResult()
        ;
    }

    public function getAllByIdsEvent(array $tickets, Event $event)
    {
        $ids = [];
        foreach ($tickets as $ticket) {
            $ids[] = $ticket->getId();
        }
        return $this->createQueryBuilder('t')
            ->innerJoin('t.events', 'e', 'WITH', 'e = :event AND t.id IN (:ids)')
            ->setParameters([
                'event' => $event,
                'ids' => $ids,
            ])
            ->getQuery()
            ->getResult()
        ;
    }

    public function getAllByEvent(Event $event)
    {
        return $this->createQueryBuilder('t')
            ->innerJoin('t.events', 'e', 'WITH', 'e = :event')
            ->innerJoin('t.ticketPeriods', 'tp')
            ->addSelect('tp')
            ->innerJoin('tp.period', 'p')
            ->addSelect('p')
            ->setParameters([
                'event' => $event,
            ])
            ->getQuery()
            ->getResult()
        ;
    }
}
